(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{bmXt:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return l})),n.d(t,"default",(function(){return d}));n("1c7q"),n("abGl"),n("gZHo"),n("Fdmb"),n("Ir+3"),n("2mQt"),n("jr56");var r=n("mXGw"),a=n("/FXl"),o=n("TjRS"),i=n("ZFoC"),s=n("oXiK");n("aD51");function b(){return(b=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var l={};void 0!==l&&l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/useForm/useForm.mdx"}});var u=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(a.b)("div",t)}},c=(u("Input"),u("Example"),{_frontmatter:l}),m=o.a;function d(e){var t,n=e.components,u=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,["components"]);return Object(a.b)(m,b({},c,u,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"useform"},"useForm"),Object(a.b)("p",null,"useForm is a simple react hook that allows you to build forms quickly."),Object(a.b)("h2",{id:"arguments"},"Arguments"),Object(a.b)("p",null,"useForm accepts an object with ",Object(a.b)("inlineCode",{parentName:"p"},"initialValues"),", ",Object(a.b)("inlineCode",{parentName:"p"},"validate"),", ",Object(a.b)("inlineCode",{parentName:"p"},"submitting"),", and ",Object(a.b)("inlineCode",{parentName:"p"},"onSubmit")," properties as its only argument."),Object(a.b)("h3",{id:"initialvalues"},Object(a.b)("strong",{parentName:"h3"},"initialValues")),Object(a.b)("p",null,"It's the only required property. It's an object consisting of field names and its corresponding values."),Object(a.b)("h3",{id:"validate"},Object(a.b)("strong",{parentName:"h3"},"validate")),Object(a.b)("p",null,"It's a function that returns errors object where the keys are the field names and the values - the corresponding errors."),Object(a.b)("h3",{id:"onsubmit"},Object(a.b)("strong",{parentName:"h3"},"onSubmit")),Object(a.b)("p",null,"It's a function called with form values."),Object(a.b)("h3",{id:"submitting"},Object(a.b)("strong",{parentName:"h3"},"submitting")),Object(a.b)("p",null,"It's a boolean passed down to getFieldProps and returned from the hook to facilitate usage with context. It's set to false by default"),Object(a.b)("h3",{id:"submissionerrors"},Object(a.b)("strong",{parentName:"h3"},"submissionErrors")),Object(a.b)("p",null,"It's an object of errors that you can feed into the hook to handle showing submission errors."),Object(a.b)("h2",{id:"returned-object"},"Returned object"),Object(a.b)("p",null,"useForm returns an object with the following properties, ",Object(a.b)("inlineCode",{parentName:"p"},"getFieldProps"),", ",Object(a.b)("inlineCode",{parentName:"p"},"invalid"),", ",Object(a.b)("inlineCode",{parentName:"p"},"pristine"),", ",Object(a.b)("inlineCode",{parentName:"p"},"handleSubmit"),"and ",Object(a.b)("inlineCode",{parentName:"p"},"resetForm"),"."),Object(a.b)("h3",{id:"getfieldprops"},Object(a.b)("strong",{parentName:"h3"},"getFieldProps")),Object(a.b)("p",null,"It's a function that takes in a field's name, and returns all the handlers and flags needed to to create a form field.\nHere is the list of returned handlers/flags:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"error"),Object(a.b)("li",{parentName:"ul"},"submissionError"),Object(a.b)("li",{parentName:"ul"},"touched"),Object(a.b)("li",{parentName:"ul"},"submitting"),Object(a.b)("li",{parentName:"ul"},"value"),Object(a.b)("li",{parentName:"ul"},"onChange"),Object(a.b)("li",{parentName:"ul"},"onBlur")),Object(a.b)("h3",{id:"invalid"},Object(a.b)("strong",{parentName:"h3"},"invalid")),Object(a.b)("p",null,"It's a boolean that signals whether the form is invalid."),Object(a.b)("h3",{id:"pristine"},Object(a.b)("strong",{parentName:"h3"},"pristine")),Object(a.b)("p",null,"It's a boolean that signals whether the form values are equal to its initial values."),Object(a.b)("h3",{id:"submitting-1"},Object(a.b)("strong",{parentName:"h3"},"submitting")),Object(a.b)("p",null,"It's a boolean with the same value as the submitting property of the hook argument. Just a convenience flag."),Object(a.b)("h3",{id:"handlesubmit"},Object(a.b)("strong",{parentName:"h3"},"handleSubmit")),Object(a.b)("p",null,"It's a wrapper function around the given onSubmit that normally should be applied to form's onSubmit."),Object(a.b)("h3",{id:"resetform"},Object(a.b)("strong",{parentName:"h3"},"resetForm")),Object(a.b)("p",null,"It's a function that resets the form to its initialState;."),Object(a.b)("h2",{id:"example"},"Example"),Object(a.b)(i.c,{__position:0,__code:"() => {\n  const Input = ({\n    error,\n    submissionError,\n    touched,\n    value,\n    onChange,\n    onBlur,\n  }) => (\n    <div>\n      <input onChange={onChange} onBlur={onBlur} value={value} />\n      <div>\n        {touched && error && <span style={{ color: 'red' }}>{error}</span>}\n        {submissionError && (\n          <span style={{ color: 'red' }}>{submissionError}</span>\n        )}\n      </div>\n    </div>\n  )\n  const validate = values => {\n    let errors = {}\n    if (values.name === '') {\n      errors.name = 'required'\n    }\n    return errors\n  }\n  const initialValues = {\n    name: '',\n  }\n  const Example = () => {\n    const [submissionErrors, setSubmissionErrors] = useState()\n    const onSubmit = useCallback(values => {\n      setTimeout(() => {\n        if (Math.floor(Math.random() * 2) == 0) {\n          alert(JSON.stringify(values))\n        } else {\n          setSubmissionErrors({ name: 'already exists' })\n        }\n      }, 1000)\n    }, [])\n    const { pristine, invalid, getFieldProps, handleSubmit } = useForm({\n      initialValues,\n      validate,\n      onSubmit,\n      submissionErrors,\n    })\n    const fieldProps = getFieldProps('name')\n    return (\n      <form onSubmit={handleSubmit}>\n        <Input {...fieldProps} />\n        <div>\n          <button disabled={pristine || invalid}>submit</button>\n        </div>\n      </form>\n    )\n  }\n  return <Example />\n}",__scope:(t={props:u,DefaultLayout:o.a,useState:r.useState,useCallback:r.useCallback,Playground:i.c,useForm:s.b},t.DefaultLayout=o.a,t._frontmatter=l,t),mdxType:"Playground"},(function(){var e=function(e){var t=e.error,n=e.submissionError,r=e.touched,o=e.value,i=e.onChange,s=e.onBlur;return Object(a.b)("div",null,Object(a.b)("input",{onChange:i,onBlur:s,value:o}),Object(a.b)("div",null,r&&t&&Object(a.b)("span",{style:{color:"red"}},t),n&&Object(a.b)("span",{style:{color:"red"}},n)))},t=function(e){var t={};return""===e.name&&(t.name="required"),t},n={name:""};return Object(a.b)((function(){var o=Object(r.useState)(),i=o[0],l=o[1],u=Object(r.useCallback)((function(e){setTimeout((function(){0==Math.floor(2*Math.random())?alert(JSON.stringify(e)):l({name:"already exists"})}),1e3)}),[]),c=Object(s.b)({initialValues:n,validate:t,onSubmit:u,submissionErrors:i}),m=c.pristine,d=c.invalid,p=c.getFieldProps,h=c.handleSubmit,j=p("name");return Object(a.b)("form",{onSubmit:h},Object(a.b)(e,b({},j,{mdxType:"Input"})),Object(a.b)("div",null,Object(a.b)("button",{disabled:m||d},"submit")))}),{mdxType:"Example"})})))}void 0!==d&&d&&d===Object(d)&&Object.isExtensible(d)&&!d.hasOwnProperty("__filemeta")&&Object.defineProperty(d,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/useForm/useForm.mdx"}}),d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-use-form-use-form-mdx-50331d05d7e32f3fb9be.js.map