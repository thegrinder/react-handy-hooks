(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{L3dj:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return s})),t.d(n,"default",(function(){return u}));t("1c7q"),t("abGl"),t("gZHo"),t("Fdmb"),t("Ir+3"),t("2mQt");var o=t("mXGw"),r=t("/FXl"),i=t("TjRS"),a=t("ZFoC"),c=t("oXiK");t("aD51");function p(){return(p=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e}).apply(this,arguments)}var s={};void 0!==s&&s&&s===Object(s)&&Object.isExtensible(s)&&!s.hasOwnProperty("__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/useAccordion/useAccordion.mdx"}});var d=function(e){return function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(r.b)("div",n)}},b=(d("AccordionHeader"),d("AccordionSection"),d("Example"),{_frontmatter:s}),l=i.a;function u(e){var n,t=e.components,d=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,["components"]);return Object(r.b)(l,p({},b,d,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"useaccordion"},"useAccordion"),Object(r.b)("p",null,"useAccordion is a react hook that returns two prop getters, ",Object(r.b)("inlineCode",{parentName:"p"},"getHeaderProps")," and ",Object(r.b)("inlineCode",{parentName:"p"},"getSectionProps"),", and an ",Object(r.b)("inlineCode",{parentName:"p"},"isActiveSection")," function,\nwhich allow you to build the tabs component you want without forgetting about accessibility."),Object(r.b)("h3",{id:"getheaderprops"},Object(r.b)("strong",{parentName:"h3"},"getHeaderProps")),Object(r.b)("p",null,"It's a function that takes in a unique id and index, and returns all the props that should be applied to each tab header.\nHere is the list of returned props:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"aria-controls"),Object(r.b)("li",{parentName:"ul"},"aria-disabled"),Object(r.b)("li",{parentName:"ul"},"aria-expanded"),Object(r.b)("li",{parentName:"ul"},"id"),Object(r.b)("li",{parentName:"ul"},"key"),Object(r.b)("li",{parentName:"ul"},"onClick"),Object(r.b)("li",{parentName:"ul"},"onFocus"),Object(r.b)("li",{parentName:"ul"},"onKeyDown"),Object(r.b)("li",{parentName:"ul"},"ref")),Object(r.b)("p",null,"If you spread these props over a custom component, make sure to properly pass down ref (typically, using ",Object(r.b)("inlineCode",{parentName:"p"},"React.forwardRef"),")."),Object(r.b)("h3",{id:"getsectionprops"},Object(r.b)("strong",{parentName:"h3"},"getSectionProps")),Object(r.b)("p",null,"It's a function that takes in a unique id and index, and returns all the props that should be applied to each tab header.\nHere is the list of returned props:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"aria-hidden"),Object(r.b)("li",{parentName:"ul"},"aria-labelledby"),Object(r.b)("li",{parentName:"ul"},"id"),Object(r.b)("li",{parentName:"ul"},"key"),Object(r.b)("li",{parentName:"ul"},"role"),Object(r.b)("li",{parentName:"ul"},"style"),Object(r.b)("li",{parentName:"ul"},"ref")),Object(r.b)("p",null,"If you spread these props over a custom component, make sure to properly pass down ref (typically, using ",Object(r.b)("inlineCode",{parentName:"p"},"React.forwardRef"),")."),Object(r.b)("h3",{id:"isactivesection"},Object(r.b)("strong",{parentName:"h3"},"isActiveSection")),Object(r.b)("p",null,"It's a simple function that takes in an index of the tab header/section and returns true or false depending whether it's an active one or not."),Object(r.b)("h2",{id:"example"},"Example"),Object(r.b)(a.c,{__position:0,__code:"() => {\n  const AccordionHeader = React.forwardRef((props, ref) => (\n    <button {...props} style={{ fontSize: '16px' }}>\n      {props.isOpen ? 'close' : 'open'}\n    </button>\n  ))\n  const AccordionSection = React.forwardRef((props, ref) => (\n    <div {...props}>\n      <div ref={ref}>{props.children}</div>\n    </div>\n  ))\n  const Example = () => {\n    const {\n      getHeaderProps,\n      getSectionProps,\n      isActiveSection,\n    } = useAccordion()\n    const items = [\n      {\n        id: 'one',\n        section: 'section one',\n      },\n      {\n        id: 'two',\n        section: 'section two',\n      },\n    ]\n    return (\n      <div aria-label=\"accordion example\">\n        {items.map(({ id, section }, index) => (\n          <div key={id}>\n            <AccordionHeader\n              isOpen={isActiveSection(index)}\n              {...getHeaderProps(id, index)}\n            />\n            <AccordionSection {...getSectionProps(id, index)}>\n              {section}\n            </AccordionSection>\n          </div>\n        ))}\n      </div>\n    )\n  }\n  return <Example />\n}",__scope:(n={props:d,DefaultLayout:i.a,Playground:a.c,useAccordion:c.a},n.DefaultLayout=i.a,n._frontmatter=s,n),mdxType:"Playground"},(function(){var e=o.forwardRef((function(e,n){return Object(r.b)("button",p({},e,{style:{fontSize:"16px"}}),e.isOpen?"close":"open")})),n=o.forwardRef((function(e,n){return Object(r.b)("div",e,Object(r.b)("div",{ref:n},e.children))}));return Object(r.b)((function(){var t=Object(c.a)(),o=t.getHeaderProps,i=t.getSectionProps,a=t.isActiveSection;return Object(r.b)("div",{"aria-label":"accordion example"},[{id:"one",section:"section one"},{id:"two",section:"section two"}].map((function(t,c){var s=t.id,d=t.section;return Object(r.b)("div",{key:s},Object(r.b)(e,p({isOpen:a(c)},o(s,c),{mdxType:"AccordionHeader"})),Object(r.b)(n,p({},i(s,c),{mdxType:"AccordionSection"}),d))})))}),{mdxType:"Example"})})))}void 0!==u&&u&&u===Object(u)&&Object.isExtensible(u)&&!u.hasOwnProperty("__filemeta")&&Object.defineProperty(u,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/useAccordion/useAccordion.mdx"}}),u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-use-accordion-use-accordion-mdx-de54be81da28018a3b60.js.map