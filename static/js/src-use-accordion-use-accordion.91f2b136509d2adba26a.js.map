{"version":3,"sources":["/home/travis/build/thegrinder/react-handy-hooks/src/utils/index.js","/home/travis/build/thegrinder/react-handy-hooks/src/useForm/useForm.js","/home/travis/build/thegrinder/react-handy-hooks/src/useAccordion/useAccordion.js","/home/travis/build/thegrinder/react-handy-hooks/src/useRequest/useRequest.js","/home/travis/build/thegrinder/react-handy-hooks/src/useToggle/useToggle.js","/home/travis/build/thegrinder/react-handy-hooks/src/index.js","/home/travis/build/thegrinder/react-handy-hooks/src/useAccordion/useAccordion.mdx"],"names":["mod","x","n","keyCodesToKey","13","27","32","37","38","39","40","isKey","key","event","eventKey","keyCode","isArrowDown","isArrowUp","isArrowLeft","isArrowRight","isEnter","isEscape","isSpace","filterOut","obj","prop","Object","keys","filter","reduce","acc","next","useForm","initialValues","validate","onSubmit","submissionErrors","submitting","useState","values","updateValues","errors","updateErrors","touched","updateTouched","undefined","submitErrors","updateSubmitErrors","useEffect","runValidation","useCallback","formValues","invalid","useMemo","length","pristine","equal","getFieldProps","name","error","submissionError","value","onChange","e","newValues","target","prevErrors","onBlur","handleSubmit","preventDefault","resetForm","useAccordion","headersRefs","useRef","current","getHeaderRef","index","node","splice","sectionsRefs","getSectionRef","activeSections","updateActiveSections","isActiveSection","includes","getSectionStyle","sectionRef","baseStyle","overflow","transition","height","clientHeight","cursorPosition","updateCursorPosition","getOnClick","prevSections","i","concat","toggleAccordionSection","focusOnHeader","nextCursorPosition","headerRef","focus","getOnFocus","getLinkingId","id","onKeyDown","getHeaderProps","onClick","onFocus","ref","getSectionProps","role","style","initialRequestState","loading","initialLoad","succeeded","data","actionTypes","LOADING","SUCCEEDED","FAILED","FULFILLED","actionCreators","type","reducer","state","action","useRequest","useReducer","dispatch","boundActionCreators","failed","fulfilled","useToggle","initial","on","set","actions","toggle","prevState","toggleOn","toggleOff","makeShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","mdxType","parentName","__position","__code","__scope","this","Playground","AccordionHeader","React","forwardRef","fontSize","isOpen","AccordionSection","children","aria-label","section","map","isMDXComponent"],"mappings":"mnBAAO,IAAMA,EAAM,SAACC,EAAGC,GAAJ,OAAYD,EAAIC,EAAKA,GAAKA,G,iKAE7C,IAAMC,EAAgB,CACpBC,GAAI,QACJC,GAAI,SACJC,GAAI,IACJC,GAAI,YACJC,GAAI,UACJC,GAAI,aACJC,GAAI,aAGOC,EAAQ,SAAAC,GAAG,OAAI,SAAAC,GAC1B,IAAMC,EAAWD,EAAMD,KAAOT,EAAcU,EAAME,SAClD,OAAOH,IAAQE,I,mKAGV,IAAME,EAAcL,EAAM,a,iMAC1B,IAAMM,EAAYN,EAAM,W,+LACxB,IAAMO,EAAcP,EAAM,a,iMAC1B,IAAMQ,EAAeR,EAAM,c,kMAC3B,IAAMS,EAAUT,EAAM,S,6LACtB,IAAMU,EAAWV,EAAM,U,8LACvB,IAAMW,EAAUX,EAAM,K,6LAEtB,IAAMY,EAAY,SAACC,EAAKC,GAAN,OACvBC,OAAOC,KAAKH,GACTI,QAAO,SAAAhB,GAAG,OAAIA,IAAQa,KACtBI,QACC,SAACC,EAAKC,GAAN,O,yVAAA,IACKD,EADL,eAEGC,EAAOP,EAAIO,OAEd,K,guBC7BN,IAAMC,EAAU,SAAC,GAMV,IALLC,EAKI,EALJA,cACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,iBAEI,IADJC,kBACI,WAC2BC,mBAASL,GADpC,mBACGM,EADH,KACWC,EADX,OAE2BF,mBAC7BJ,EAAWA,EAASD,GAAiB,IAHnC,mBAEGQ,EAFH,KAEWC,EAFX,OAK6BJ,mBAAS,IALtC,mBAKGK,EALH,KAKYC,EALZ,OAMuCN,wBAASO,GANhD,mBAMGC,EANH,KAMiBC,EANjB,KAQJC,qBAAU,WACJZ,GACFW,EAAmBX,KAEpB,CAACA,IAEJ,IAAMa,EAAgBC,uBACpB,SAAAC,GACMjB,GACFQ,EAAaR,EAASiB,MAG1B,CAACjB,IAGGkB,EAAUC,mBAAQ,mBAAQ3B,OAAOC,KAAKc,GAAQa,SAAQ,CAACb,IAEvDc,EAAWF,mBAAQ,kBAAMG,IAAMvB,EAAeM,KAAS,CAC3DN,EACAM,IAGIkB,EAAgBP,uBACpB,SAAAQ,GAAI,MAAK,CACPrB,aACAsB,MAAOlB,EAAOiB,GACdE,gBAAiBd,GAAgBA,EAAaY,GAC9Cf,UAAWA,EAAQe,GACnBG,MAAOtB,EAAOmB,GACdI,SANO,SAMEC,GACP,IAAMC,EAAS,KAAQzB,EAAR,eAAiBmB,EAAOK,EAAEE,OAAOJ,QAC5Cf,GACFC,GAAmB,SAAAmB,GAAU,OAAI3C,EAAU2C,EAAYR,MAEzDlB,EAAawB,GACbf,EAAce,IAEhBG,OAdO,WAeLvB,EAAc,KAAKD,EAAN,eAAgBe,GAAO,SAGxC,CAACjB,EAAQQ,EAAeH,EAAcT,EAAYM,EAASJ,IAGvD6B,EAAelB,uBACnB,SAAAa,GACEA,EAAEM,kBACGjB,GAAWjB,IACVW,GACFC,OAAmBF,GAErBV,EAASI,MAGb,CAACa,EAASjB,EAAUW,EAAcP,IAG9B+B,EAAYpB,uBAAY,WAC5BV,EAAaP,GACbc,OAAmBF,GACnBH,EAAa,IACbE,EAAc,MACb,CAACX,IAEJ,MAAO,CACLwB,gBACAL,UACAG,WACAlB,aACA+B,eACAE,cAIWtC,I,kuBCzFf,IAAMuC,EAAe,WACnB,IAAMC,EAAcC,iBAAO,IAAIC,QAEzBC,EAAezB,uBACnB,SAAA0B,GAAK,OAAI,SAAAC,GACM,OAATA,EACFL,EAAYM,OAAOF,EAAO,GAE1BJ,EAAYI,GAASC,KAGzB,CAACL,IAGGO,EAAeN,iBAAO,IAAIC,QAE1BM,EAAgB9B,uBACpB,SAAA0B,GAAK,OAAI,SAAAC,GACM,OAATA,EACFE,EAAaD,OAAOF,EAAO,GAE3BG,EAAaH,GAASC,KAG1B,CAACE,IAxBsB,EA2BsBzC,mBAAS,IA3B/B,mBA2BlB2C,EA3BkB,KA2BFC,EA3BE,KA6BnBC,EAAkBjC,uBAAY,SAAA0B,GAAK,OAAIK,EAAeG,SAASR,KAAQ,CAC3EK,IAGII,EAAkBnC,uBACtB,SAAA0B,GACE,IAAMU,EAAaP,EAAaH,GAC1BW,EAAY,CAChBC,SAAU,SACVC,WAAY,uBAEd,OAAKH,GAAeH,EAAgBP,GAG7B,KAAKW,EAAZ,CAAuBG,OAAO,GAAD,OAAKJ,EAAWK,aAAhB,QAFpB,KAAKJ,EAAZ,CAAuBG,OAAQ,UAInC,CAACP,EAAiBJ,IA7CK,EAuDsBzC,oBAAU,GAvDhC,mBAuDlBsD,EAvDkB,KAuDFC,EAvDE,KAyDnBC,EAAa5C,uBACjB,SAAA0B,GAAK,OAAI,WACPiB,EAAqBjB,GAXM,SAAAA,GAC7BM,GAAqB,SAAAa,GAAY,OAC/BA,EAAaX,SAASR,GAClBmB,EAAanE,QAAO,SAAAoE,GAAC,OAAIA,IAAMpB,KAC/BmB,EAAaE,OAAOrB,MAQxBsB,CAAuBtB,MAEzB,IAGIuB,EAAgBjD,uBACpB,SAAAkD,GACE,IAAMC,EAAY7B,EAAY4B,GAC1BC,GACFA,EAAUC,UAGd,CAAC9B,IAGG+B,EAAa,SAAA3B,GAAK,OAAI,kBAAMiB,EAAqBjB,KAEjD4B,EAAe,SAAAC,GAAE,gBAAOA,EAAP,SAEjBC,EAAYxD,uBAChB,SAAAa,GAAM,IACIT,EAAWkB,EAAXlB,OACR,GAAIrC,EAAU8C,GAAI,CAChBA,EAAEM,iBACF,IAAM+B,EAAqBpG,EAAI4F,EAAiB,EAAGtC,GACnDuC,EAAqBO,GACrBD,EAAcC,QACT,GAAIpF,EAAY+C,GAAI,CACzBA,EAAEM,iBACF,IAAM+B,EAAqBpG,EAAI4F,EAAiB,EAAGtC,GACnDuC,EAAqBO,GACrBD,EAAcC,MAGlB,CAACR,EAAgBO,EAAe3B,IA+BlC,MAAO,CACLmC,eA7BqBzD,uBACrB,SAACuD,EAAI7B,GAAL,MAAgB,CACd,gBAAiB4B,EAAaC,GAC9B,gBAAiBtB,EAAgBP,GACjC,gBAAiBO,EAAgBP,GACjC6B,KACA7F,IAAK6F,EACLG,QAASd,EAAWlB,GACpBiC,QAASN,EAAW3B,GACpB8B,YACAI,IAAKnC,EAAaC,MAEpB,CAACD,EAAcmB,EAAYX,EAAiBuB,IAkB5CK,gBAfsB7D,uBACtB,SAACuD,EAAI7B,GAAL,MAAgB,CACd,eAAgBO,EAAgBP,GAChC,kBAAmB6B,EACnBA,GAAID,EAAaC,GACjB7F,IAAK4F,EAAaC,GAClBK,IAAK9B,EAAcJ,GACnBoC,KAAM,SACNC,MAAO5B,EAAgBT,MAEzB,CAACI,EAAeK,EAAiBF,IAMjCA,oBAIWZ,I,ivBCrIf,IAAM2C,EAAsB,CAC1BC,SAAS,EACTC,aAAa,EACbC,WAAW,EACX1D,MAAO,KACP2D,KAAM,IAIFC,EAAc,CAClBC,QAAQ,GAAD,OAFS,aAET,YACPC,UAAU,GAAD,OAHO,aAGP,cACTC,OAAO,GAAD,OAJU,aAIV,WACNC,UAAU,GAAD,OALO,aAKP,eAGLC,EACK,iBAAO,CAAEC,KAAMN,EAAYC,UADhCI,EAEO,eAACN,EAAD,uDAAQ,GAAR,MAAgB,CAAEA,OAAMO,KAAMN,EAAYE,YAFjDG,EAGI,SAAAjE,GAAK,MAAK,CAAEA,QAAOkE,KAAMN,EAAYG,SAHzCE,EAIO,iBAAO,CAAEC,KAAMN,EAAYI,YAGlCG,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOH,MACb,KAAKN,EAAYC,QACf,OAAO,KACFO,EADL,CAEEpE,MAAO,KACPwD,SAAS,EACTE,WAAW,IAEf,KAAKE,EAAYE,UACf,OAAO,KACFM,EADL,CAEEZ,SAAS,EACTE,WAAW,EACXD,aAAa,EACbE,KAAMU,EAAOV,OAEjB,KAAKC,EAAYG,OACf,OAAO,KACFK,EADL,CAEEZ,SAAS,EACTC,aAAa,EACbzD,MAAOqE,EAAOrE,QAElB,KAAK4D,EAAYI,UACf,OAAO,KACFI,EADL,CAEEZ,SAAS,EACTC,aAAa,IAEjB,QACE,OAAOW,IAIPE,EAAa,WAAO,IAAD,EACGC,qBAAWJ,EAASZ,GADvB,mBAChBa,EADgB,KACTI,EADS,KAGjBC,EAAsB/E,mBAC1B,iBAAO,CACL8D,QAAS,kBAAMgB,EAASP,MACxBP,UAAW,eAACC,EAAD,uDAAQ,GAAR,OAAea,EAASP,EAAyBN,KAC5De,OAAQ,SAAA1E,GAAK,OAAIwE,EAASP,EAAsBjE,KAChD2E,UAAW,kBAAMH,EAASP,SAE5B,IAKF,MAAO,CAFevE,mBAAQ,kBAAM0E,IAAO,CAACA,IAErBK,IAGVH,I,kLC5Ef,IAAMM,EAAY,WAAsB,IAArBC,EAAoB,0DACnBlG,mBAASkG,GADU,mBAC9BC,EAD8B,KAC1BC,EAD0B,KAE/BC,EAAU,CACdC,OAAQ,kBAAMF,GAAI,SAAAG,GAAS,OAAKA,MAChCC,SAAU,kBAAMJ,GAAI,IACpBK,UAAW,kBAAML,GAAI,KAEjB7E,EAAQR,mBAAQ,iBAAM,CAACoF,EAAIE,KAAU,CAACA,EAASF,IACrD,OAAO5E,GAGM0E,I,+KCbf,wI,mtCCQMS,EAAgB,SAAAtF,GAAI,OAAI,SAA6BuF,GAEzD,OADAC,QAAQC,KAAK,aAAezF,EAAO,2EAC5B,kBAASuF,KAKZG,GAHkBJ,EAAc,mBACbA,EAAc,oBACvBA,EAAc,WACV,IAGdK,EAAY,UACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGN,EACF,8BACD,OAAO,YAACI,EAAD,eAAeD,EAAiBH,EAAhC,CAAuCM,WAAYA,EAAYC,QAAQ,cAC5E,iBAAQ,CACN,GAAM,gBADR,gBAGA,oFAAmE,0BAAYC,WAAW,KAAvB,kBAAnE,QAAsI,0BAAYA,WAAW,KAAvB,mBAAtI,YAA8M,0BAAYA,WAAW,KAAvB,mBAA9M,4GAEA,iBAAQ,CACN,GAAM,kBACL,sBAAQA,WAAW,MAAnB,mBACH,uLAEA,sBACE,kBAAIA,WAAW,MAAf,iBACA,kBAAIA,WAAW,MAAf,iBACA,kBAAIA,WAAW,MAAf,iBACA,kBAAIA,WAAW,MAAf,MACA,kBAAIA,WAAW,MAAf,OACA,kBAAIA,WAAW,MAAf,WACA,kBAAIA,WAAW,MAAf,WACA,kBAAIA,WAAW,MAAf,aACA,kBAAIA,WAAW,MAAf,QAEF,iIAAgH,0BAAYA,WAAW,KAAvB,oBAAhH,MACA,iBAAQ,CACN,GAAM,mBACL,sBAAQA,WAAW,MAAnB,oBACH,uLAEA,sBACE,kBAAIA,WAAW,MAAf,eACA,kBAAIA,WAAW,MAAf,mBACA,kBAAIA,WAAW,MAAf,MACA,kBAAIA,WAAW,MAAf,OACA,kBAAIA,WAAW,MAAf,QACA,kBAAIA,WAAW,MAAf,SACA,kBAAIA,WAAW,MAAf,QAEF,iIAAgH,0BAAYA,WAAW,KAAvB,oBAAhH,MACA,iBAAQ,CACN,GAAM,mBACL,sBAAQA,WAAW,MAAnB,oBACH,uKAEA,iBAAQ,CACN,GAAM,WADR,WAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,smCAAqnCC,QAAS,CAC/pCX,MAAOY,KAAOA,KAAKZ,MAAQA,EAC3Ba,eACAvF,kBACCiF,QAAQ,eACZ,WACK,IAAMO,EAAkBC,IAAMC,YAAW,SAAChB,EAAOnC,GAAR,OAAgB,oCAAYmC,EAAZ,CAAmBhC,MAAO,CACjFiD,SAAU,UAEXjB,EAAMkB,OAAS,QAAU,WAEpBC,EAAmBJ,IAAMC,YAAW,SAAChB,EAAOnC,GAAR,OAAgB,kBAASmC,EACvE,mBAAKnC,IAAKA,GACPmC,EAAMoB,cA8BL,OAAO,aA1BS,WAAO,IAAD,EAKhB9F,cAHFoC,EAFkB,EAElBA,eACAI,EAHkB,EAGlBA,gBACA5B,EAJkB,EAIlBA,gBASF,OAAO,mBAAKmF,aAAW,qBAPT,CAAC,CACb7D,GAAI,MACJ8D,QAAS,eACR,CACD9D,GAAI,MACJ8D,QAAS,gBAGRC,KAAI,WAGF5F,GAHE,IACH6B,EADG,EACHA,GACA8D,EAFG,EAEHA,QAFG,OAGQ,mBAAK3J,IAAK6F,GACzB,YAACsD,EAAD,aAAiBI,OAAQhF,EAAgBP,IAAY+B,EAAeF,EAAI7B,GAAxE,CAAgF4E,QAAQ,qBACxF,YAACY,EAAD,eAAsBrD,EAAgBN,EAAI7B,GAA1C,CAAkD4E,QAAQ,qBACvDe,UAME,CAASf,QAAQ,gB,uLAOhCF,EAAWmB,gBAAiB","file":"static/js/src-use-accordion-use-accordion.edee1611.js","sourcesContent":["export const mod = (x, n) => ((x % n) + n) % n;\n\nconst keyCodesToKey = {\n  13: 'Enter',\n  27: 'Escape',\n  32: ' ',\n  37: 'ArrowLeft',\n  38: 'ArrowUp',\n  39: 'ArrowRight',\n  40: 'ArrowDown',\n};\n\nexport const isKey = key => event => {\n  const eventKey = event.key || keyCodesToKey[event.keyCode];\n  return key === eventKey;\n};\n\nexport const isArrowDown = isKey('ArrowDown');\nexport const isArrowUp = isKey('ArrowUp');\nexport const isArrowLeft = isKey('ArrowLeft');\nexport const isArrowRight = isKey('ArrowRight');\nexport const isEnter = isKey('Enter');\nexport const isEscape = isKey('Escape');\nexport const isSpace = isKey(' ');\n\nexport const filterOut = (obj, prop) =>\n  Object.keys(obj)\n    .filter(key => key !== prop)\n    .reduce(\n      (acc, next) => ({\n        ...acc,\n        [next]: obj[next],\n      }),\n      {}\n    );\n","import { useState, useCallback, useMemo, useEffect } from 'react';\nimport equal from 'fast-deep-equal';\nimport { filterOut } from '../utils';\n\nconst useForm = ({\n  initialValues,\n  validate,\n  onSubmit,\n  submissionErrors,\n  submitting = false,\n}) => {\n  const [values, updateValues] = useState(initialValues);\n  const [errors, updateErrors] = useState(\n    validate ? validate(initialValues) : {}\n  );\n  const [touched, updateTouched] = useState({});\n  const [submitErrors, updateSubmitErrors] = useState(undefined);\n\n  useEffect(() => {\n    if (submissionErrors) {\n      updateSubmitErrors(submissionErrors);\n    }\n  }, [submissionErrors]);\n\n  const runValidation = useCallback(\n    formValues => {\n      if (validate) {\n        updateErrors(validate(formValues));\n      }\n    },\n    [validate]\n  );\n\n  const invalid = useMemo(() => !!Object.keys(errors).length, [errors]);\n\n  const pristine = useMemo(() => equal(initialValues, values), [\n    initialValues,\n    values,\n  ]);\n\n  const getFieldProps = useCallback(\n    name => ({\n      submitting,\n      error: errors[name],\n      submissionError: submitErrors && submitErrors[name],\n      touched: !!touched[name],\n      value: values[name],\n      onChange(e) {\n        const newValues = { ...values, [name]: e.target.value };\n        if (submitErrors) {\n          updateSubmitErrors(prevErrors => filterOut(prevErrors, name));\n        }\n        updateValues(newValues);\n        runValidation(newValues);\n      },\n      onBlur() {\n        updateTouched({ ...touched, [name]: true });\n      },\n    }),\n    [errors, runValidation, submitErrors, submitting, touched, values]\n  );\n\n  const handleSubmit = useCallback(\n    e => {\n      e.preventDefault();\n      if (!invalid && onSubmit) {\n        if (submitErrors) {\n          updateSubmitErrors(undefined);\n        }\n        onSubmit(values);\n      }\n    },\n    [invalid, onSubmit, submitErrors, values]\n  );\n\n  const resetForm = useCallback(() => {\n    updateValues(initialValues);\n    updateSubmitErrors(undefined);\n    updateErrors({});\n    updateTouched({});\n  }, [initialValues]);\n\n  return {\n    getFieldProps,\n    invalid,\n    pristine,\n    submitting,\n    handleSubmit,\n    resetForm,\n  };\n};\n\nexport default useForm;\n","import { useRef, useState, useCallback } from 'react';\nimport { mod, isArrowDown, isArrowUp } from '../utils';\n\nconst useAccordion = () => {\n  const headersRefs = useRef([]).current;\n\n  const getHeaderRef = useCallback(\n    index => node => {\n      if (node === null) {\n        headersRefs.splice(index, 1);\n      } else {\n        headersRefs[index] = node;\n      }\n    },\n    [headersRefs]\n  );\n\n  const sectionsRefs = useRef([]).current;\n\n  const getSectionRef = useCallback(\n    index => node => {\n      if (node === null) {\n        sectionsRefs.splice(index, 1);\n      } else {\n        sectionsRefs[index] = node;\n      }\n    },\n    [sectionsRefs]\n  );\n\n  const [activeSections, updateActiveSections] = useState([]);\n\n  const isActiveSection = useCallback(index => activeSections.includes(index), [\n    activeSections,\n  ]);\n\n  const getSectionStyle = useCallback(\n    index => {\n      const sectionRef = sectionsRefs[index];\n      const baseStyle = {\n        overflow: 'hidden',\n        transition: 'height 200ms linear',\n      };\n      if (!sectionRef || !isActiveSection(index)) {\n        return { ...baseStyle, height: '0px' };\n      }\n      return { ...baseStyle, height: `${sectionRef.clientHeight}px` };\n    },\n    [isActiveSection, sectionsRefs]\n  );\n\n  const toggleAccordionSection = index =>\n    updateActiveSections(prevSections =>\n      prevSections.includes(index)\n        ? prevSections.filter(i => i !== index)\n        : prevSections.concat(index)\n    );\n\n  const [cursorPosition, updateCursorPosition] = useState(-1);\n\n  const getOnClick = useCallback(\n    index => () => {\n      updateCursorPosition(index);\n      toggleAccordionSection(index);\n    },\n    []\n  );\n\n  const focusOnHeader = useCallback(\n    nextCursorPosition => {\n      const headerRef = headersRefs[nextCursorPosition];\n      if (headerRef) {\n        headerRef.focus();\n      }\n    },\n    [headersRefs]\n  );\n\n  const getOnFocus = index => () => updateCursorPosition(index);\n\n  const getLinkingId = id => `${id}-tab`;\n\n  const onKeyDown = useCallback(\n    e => {\n      const { length } = headersRefs;\n      if (isArrowUp(e)) {\n        e.preventDefault();\n        const nextCursorPosition = mod(cursorPosition - 1, length);\n        updateCursorPosition(nextCursorPosition);\n        focusOnHeader(nextCursorPosition);\n      } else if (isArrowDown(e)) {\n        e.preventDefault();\n        const nextCursorPosition = mod(cursorPosition + 1, length);\n        updateCursorPosition(nextCursorPosition);\n        focusOnHeader(nextCursorPosition);\n      }\n    },\n    [cursorPosition, focusOnHeader, headersRefs]\n  );\n\n  const getHeaderProps = useCallback(\n    (id, index) => ({\n      'aria-controls': getLinkingId(id),\n      'aria-disabled': isActiveSection(index),\n      'aria-expanded': isActiveSection(index),\n      id,\n      key: id,\n      onClick: getOnClick(index),\n      onFocus: getOnFocus(index),\n      onKeyDown,\n      ref: getHeaderRef(index),\n    }),\n    [getHeaderRef, getOnClick, isActiveSection, onKeyDown]\n  );\n\n  const getSectionProps = useCallback(\n    (id, index) => ({\n      'aria-hidden': !isActiveSection(index),\n      'aria-labelledby': id,\n      id: getLinkingId(id),\n      key: getLinkingId(id),\n      ref: getSectionRef(index),\n      role: 'region',\n      style: getSectionStyle(index),\n    }),\n    [getSectionRef, getSectionStyle, isActiveSection]\n  );\n\n  return {\n    getHeaderProps,\n    getSectionProps,\n    isActiveSection,\n  };\n};\n\nexport default useAccordion;\n","import { useReducer, useMemo } from 'react';\n\nconst initialRequestState = {\n  loading: false,\n  initialLoad: true,\n  succeeded: false,\n  error: null,\n  data: {},\n};\n\nconst namespace = 'useRequest';\nconst actionTypes = {\n  LOADING: `${namespace}/LOADING`,\n  SUCCEEDED: `${namespace}/SUCCEEDED`,\n  FAILED: `${namespace}/FAILED`,\n  FULFILLED: `${namespace}/FULFILLED`,\n};\n\nconst actionCreators = {\n  loading: () => ({ type: actionTypes.LOADING }),\n  succeeded: (data = {}) => ({ data, type: actionTypes.SUCCEEDED }),\n  failed: error => ({ error, type: actionTypes.FAILED }),\n  fulfilled: () => ({ type: actionTypes.FULFILLED }),\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case actionTypes.LOADING:\n      return {\n        ...state,\n        error: null,\n        loading: true,\n        succeeded: false,\n      };\n    case actionTypes.SUCCEEDED:\n      return {\n        ...state,\n        loading: false,\n        succeeded: true,\n        initialLoad: false,\n        data: action.data,\n      };\n    case actionTypes.FAILED:\n      return {\n        ...state,\n        loading: false,\n        initialLoad: false,\n        error: action.error,\n      };\n    case actionTypes.FULFILLED:\n      return {\n        ...state,\n        loading: false,\n        initialLoad: false,\n      };\n    default:\n      return state;\n  }\n};\n\nconst useRequest = () => {\n  const [state, dispatch] = useReducer(reducer, initialRequestState);\n\n  const boundActionCreators = useMemo(\n    () => ({\n      loading: () => dispatch(actionCreators.loading()),\n      succeeded: (data = {}) => dispatch(actionCreators.succeeded(data)),\n      failed: error => dispatch(actionCreators.failed(error)),\n      fulfilled: () => dispatch(actionCreators.fulfilled()),\n    }),\n    []\n  );\n\n  const memoizedState = useMemo(() => state, [state]);\n\n  return [memoizedState, boundActionCreators];\n};\n\nexport default useRequest;\n","import { useState, useMemo } from 'react';\n\nconst useToggle = (initial = false) => {\n  const [on, set] = useState(initial);\n  const actions = {\n    toggle: () => set(prevState => !prevState),\n    toggleOn: () => set(true),\n    toggleOff: () => set(false),\n  };\n  const value = useMemo(() => [on, actions], [actions, on]);\n  return value;\n};\n\nexport default useToggle;\n","import useForm from './useForm/useForm';\nimport useAccordion from './useAccordion/useAccordion';\nimport useRequest from './useRequest/useRequest';\nimport useToggle from './useToggle/useToggle';\n\nexport { useForm, useAccordion, useRequest, useToggle };\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Playground } from 'docz';\nimport { useAccordion } from '../';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst AccordionHeader = makeShortcode(\"AccordionHeader\");\nconst AccordionSection = makeShortcode(\"AccordionSection\");\nconst Example = makeShortcode(\"Example\");\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"useaccordion\"\n    }}>{`useAccordion`}</h1>\n    <p>{`useAccordion is a react hook that returns two prop getters, `}<inlineCode parentName=\"p\">{`getHeaderProps`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`getSectionProps`}</inlineCode>{`, and an `}<inlineCode parentName=\"p\">{`isActiveSection`}</inlineCode>{` function,\nwhich allow you to build the tabs component you want without forgetting about accessibility.`}</p>\n    <h3 {...{\n      \"id\": \"getheaderprops\"\n    }}><strong parentName=\"h3\">{`getHeaderProps`}</strong></h3>\n    <p>{`It's a function that takes in a unique id and index, and returns all the props that should be applied to each tab header.\nHere is the list of returned props:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`aria-controls`}</li>\n      <li parentName=\"ul\">{`aria-disabled`}</li>\n      <li parentName=\"ul\">{`aria-expanded`}</li>\n      <li parentName=\"ul\">{`id`}</li>\n      <li parentName=\"ul\">{`key`}</li>\n      <li parentName=\"ul\">{`onClick`}</li>\n      <li parentName=\"ul\">{`onFocus`}</li>\n      <li parentName=\"ul\">{`onKeyDown`}</li>\n      <li parentName=\"ul\">{`ref`}</li>\n    </ul>\n    <p>{`If you spread these props over a custom component, make sure to properly pass down ref (typically, using `}<inlineCode parentName=\"p\">{`React.forwardRef`}</inlineCode>{`).`}</p>\n    <h3 {...{\n      \"id\": \"getsectionprops\"\n    }}><strong parentName=\"h3\">{`getSectionProps`}</strong></h3>\n    <p>{`It's a function that takes in a unique id and index, and returns all the props that should be applied to each tab header.\nHere is the list of returned props:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`aria-hidden`}</li>\n      <li parentName=\"ul\">{`aria-labelledby`}</li>\n      <li parentName=\"ul\">{`id`}</li>\n      <li parentName=\"ul\">{`key`}</li>\n      <li parentName=\"ul\">{`role`}</li>\n      <li parentName=\"ul\">{`style`}</li>\n      <li parentName=\"ul\">{`ref`}</li>\n    </ul>\n    <p>{`If you spread these props over a custom component, make sure to properly pass down ref (typically, using `}<inlineCode parentName=\"p\">{`React.forwardRef`}</inlineCode>{`).`}</p>\n    <h3 {...{\n      \"id\": \"isactivesection\"\n    }}><strong parentName=\"h3\">{`isActiveSection`}</strong></h3>\n    <p>{`It's a simple function that takes in an index of the tab header/section and returns true or false depending whether it's an active one or not.`}</p>\n\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const AccordionHeader = React.forwardRef((props, ref) => (\\n    <button {...props} style={{ fontSize: \\'16px\\' }}>\\n      {props.isOpen ? \\'close\\' : \\'open\\'}\\n    </button>\\n  ))\\n  const AccordionSection = React.forwardRef((props, ref) => (\\n    <div {...props}>\\n      <div ref={ref}>{props.children}</div>\\n    </div>\\n  ))\\n\\n  const Example = () => {\\n    const {\\n      getHeaderProps,\\n      getSectionProps,\\n      isActiveSection,\\n    } = useAccordion()\\n    const items = [\\n      {\\n        id: \\'one\\',\\n        section: \\'section one\\',\\n      },\\n      {\\n        id: \\'two\\',\\n        section: \\'section two\\',\\n      },\\n    ]\\n    return (\\n      <div aria-label=\\\"accordion example\\\">\\n        {items.map(({ id, section }, index) => (\\n          <div key={id}>\\n            <AccordionHeader\\n              isOpen={isActiveSection(index)}\\n              {...getHeaderProps(id, index)}\\n            />\\n            <AccordionSection {...getSectionProps(id, index)}>\\n              {section}\\n            </AccordionSection>\\n          </div>\\n        ))}\\n      </div>\\n    )\\n  }\\n\\n  return <Example />\\n}'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      useAccordion\n    }} mdxType=\"Playground\">\n  {() => {\n        const AccordionHeader = React.forwardRef((props, ref) => <button {...props} style={{\n          fontSize: '16px'\n        }}>\n        {props.isOpen ? 'close' : 'open'}\n      </button>);\n        const AccordionSection = React.forwardRef((props, ref) => <div {...props}>\n    <div ref={ref}>\n      {props.children}\n    </div>\n  </div>);\n\n        const Example = () => {\n          const {\n            getHeaderProps,\n            getSectionProps,\n            isActiveSection\n          } = useAccordion();\n          const items = [{\n            id: 'one',\n            section: 'section one'\n          }, {\n            id: 'two',\n            section: 'section two'\n          }];\n          return <div aria-label=\"accordion example\">\n      {items.map(({\n              id,\n              section\n            }, index) => <div key={id}>\n          <AccordionHeader isOpen={isActiveSection(index)} {...getHeaderProps(id, index)} mdxType=\"AccordionHeader\" />\n          <AccordionSection {...getSectionProps(id, index)} mdxType=\"AccordionSection\">\n            {section}\n          </AccordionSection>\n        </div>)}\n    </div>;\n        };\n\n        return <Example mdxType=\"Example\" />;\n      }}\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}