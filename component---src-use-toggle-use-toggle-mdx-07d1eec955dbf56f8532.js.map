{"version":3,"sources":["webpack:///../src/useToggle/useToggle.mdx"],"names":["_frontmatter","name","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","useToggle","state","actions","onClick","toggle","isMDXComponent"],"mappings":"0gBAQO,IAAMA,EAAe,Q,6MAENC,EAKc,gBALpC,IAAsBA,EAMhBC,EAAc,CAClBF,gBAEIG,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,aADR,aAGA,gHACA,iBAAQ,CACN,GAAM,SADR,SAGA,iCAAgB,0BAAYC,WAAW,KAAvB,SAAhB,4FAA8J,0BAAYA,WAAW,KAAvB,mBAA9J,KACA,iBAAQ,CACN,GAAM,WADR,WAGA,iBAAQ,CACN,GAAM,UADR,UAGA,sBACE,kBAAIA,WAAW,MAAf,oCAEF,iBAAQ,CACN,GAAM,YADR,YAGA,sBACE,kBAAIA,WAAW,MAAf,2BAAgD,0BAAYA,WAAW,MAAvB,UAElD,iBAAQ,CACN,GAAM,aADR,aAGA,sBACE,kBAAIA,WAAW,MAAf,2BAAgD,0BAAYA,WAAW,MAAvB,WAElD,iBAAQ,CACN,GAAM,WADR,WAIA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,sMAA2MC,SAAO,GACnPL,QACAH,kBACAS,eACAC,eAJmP,gBAKnPV,IALmP,EAMnPJ,eANmP,GAOlPQ,QAAQ,eACZ,WAMK,OAAO,aALe,WAAM,MACDM,cAAlBC,EADmB,KACZC,EADY,KAE1B,OAAO,sBAAQC,QAASD,EAAQE,QAASH,EAAQ,KAAO,SAGnD,CAAeP,QAAQ,2B,2MAOtCH,EAAWc,gBAAiB","file":"component---src-use-toggle-use-toggle-mdx-07d1eec955dbf56f8532.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/thegrinder/react-handy-hooks/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from 'docz';\nimport { useToggle } from '../';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst UseToggleDemo = makeShortcode(\"UseToggleDemo\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"usetoggle\"\n    }}>{`useToggle`}</h1>\n    <p>{`useToggle is a simple hook that returns a boolean value and three actions to update it.`}</p>\n    <h2 {...{\n      \"id\": \"state\"\n    }}>{`State`}</h2>\n    <p>{`Boolean, `}<inlineCode parentName=\"p\">{`false`}</inlineCode>{` by default. You can provide the initial value by calling the hook with an argument, e.g `}<inlineCode parentName=\"p\">{`useToggle(true)`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"actions\"\n    }}>{`Actions`}</h2>\n    <h3 {...{\n      \"id\": \"toggle\"\n    }}>{`toggle`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`toggles the current state value`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"toggleon\"\n    }}>{`toggleOn`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`sets the state value to `}<inlineCode parentName=\"li\">{`true`}</inlineCode></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"toggleoff\"\n    }}>{`toggleOff`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`sets the state value to `}<inlineCode parentName=\"li\">{`false`}</inlineCode></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n\n    <Playground __position={0} __code={'() => {\\n  const UseToggleDemo = () => {\\n    const [state, actions] = useToggle()\\n    return <button onClick={actions.toggle}>{state ? \\'on\\' : \\'off\\'}</button>\\n  }\\n  return <UseToggleDemo />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      useToggle,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const UseToggleDemo = () => {\n          const [state, actions] = useToggle();\n          return <button onClick={actions.toggle}>{state ? 'on' : 'off'}</button>;\n        };\n\n        return <UseToggleDemo mdxType=\"UseToggleDemo\" />;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}